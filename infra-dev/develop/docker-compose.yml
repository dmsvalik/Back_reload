version: '3.8'

# if port 5432 is in use check it:
# sudo lsof -i tcp:5432
# than kill process to start postgresql
#and then: kill -9 <process id> (macOS) or sudo kill <process id> (Linux).

#https://saasitive.com/tutorial/django-celery-redis-postgres-docker-compose/:
#to create new admin just do in command
#docker exec -it <container_id - app> python manage.py createsuperuser

#docker compose build app  -remake only app container after changes
#docker-compose down --volumes or docker-compose down --rmi all --volumes
#docker rm -f -v postgres_container_name (db)

services:

# Backend-project
  app:
    container_name: app-backend
    build:
      context: ../../
      dockerfile: Dockerfile_1
    restart: always
    ports:
      - "8000:8000"
    entrypoint:
      [ "/app/docker-entrypoint.sh" ]
    env_file:
      - ./.env
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - files:/app/files/
      - media_type:/app/media_type/
    depends_on:
      - db
      - redis

  daphne:
    container_name: app-daphne-backend
    build:
      context: ../../
      dockerfile: Dockerfile_1
    restart: always
    ports:
      - "8001:8001"
    command: >
      sh -c "poetry run daphne -b 0.0.0.0 -p 8001 config.asgi:application"
    env_file:
      - ./.env
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - files:/app/files/
      - media_type:/app/media_type/
    depends_on:
      - db
      - redis

# Postgres DB
  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - "5433:5433"
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

# Celery Worker
  worker:
    build:
      context: ../../
      dockerfile: Dockerfile_1
    restart: always
    command:
         sh -c "poetry run celery -A config.celery worker -l info --concurrency=1 --queues a,b"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - files:/app/files/
      - media_type:/app/media_type/
    depends_on:
      - app
      - daphne
    env_file:
      - ./.env


# Celery Beat Worker
  worker-beat:
    build:
      context: ../../
      dockerfile: Dockerfile_1
    restart: always
    command:
      sh -c "poetry run celery -A config beat -l info"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - files:/app/files/
      - media_type:/app/media_type/
    depends_on:
      - worker
    env_file:
      - ./.env

  redis:
    image: 'redis:7.2'
    expose:
      - 6379
    volumes:
      - redis-data:/data

  pgadmin:
    container_name: db_pg_admin
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./.env
    ports:
      - "5050:80"

  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - files:/var/html/files/
      - media_type:/var/html/media_type/

volumes:
  postgres_data:
  static_value:
  media_value:
  files:
  media_type:
  redis-data:
