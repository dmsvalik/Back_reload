version: '3.3'

# if port 5432 is in use check it:
# sudo lsof -i tcp:5432
# than kill process to start postgresql
#and then: kill -9 <process id> (macOS) or sudo kill <process id> (Linux).

#https://saasitive.com/tutorial/django-celery-redis-postgres-docker-compose/:
#to create new admin just do in command
#docker exec -it <container_id - app> python manage.py createsuperuser

#docker compose build app  -remake only app container after changes


services:

# Backend-project
  app:
    container_name: app-backend
    image: whywe/prod_image:latest
    restart: always
    ports:
      - "8000:8000"
    command: >
      sh -c "chmod +x /app/infra-dev/docker-entrypoint.sh && /app/infra-dev/docker-entrypoint.sh"
#    entrypoint:
#      [ "/app/docker-entrypoint.sh" ]
    volumes:
      - /backdata/static/:/app/static/
      - /backdata/media/:/app/media/
      - /backdata/files/:/app/files/
      - /backdata/media_type/:/app/media_type/
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  daphne:
    container_name: app-daphne-backend
    image: whywe/prod_image:latest
    restart: always
    ports:
      - "8001:8001"
    command: >
      sh -c "poetry run daphne -b 0.0.0.0 -p 8001 config.asgi:application"
    volumes:
      - /backdata/static/:/app/static/
      - /backdata/media/:/app/media/
      - /backdata/files/:/app/files/
      - /backdata/media_type/:/app/media_type/
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

# Postgres DB
  db:
    image: postgres
    container_name: db
    restart: always
    volumes:
      - /backdata/postgres_data/:/var/lib/postgresql/data
    env_file:
      - ./.env

# Celery Worker
  worker:
    image: whywe/prod_image:latest
    restart: always
    command:
         sh -c "poetry run celery -A config worker -l info"
    volumes:
      - /backdata/static/:/app/static/
      - /backdata/media/:/app/media/
      - /backdata/files/:/app/files/
      - /backdata/media_type/:/app/media_type/
    env_file:
      - ./.env
    depends_on:
      - app
      - daphne



# Celery Beat Worker
  worker-beat:
    image: whywe/prod_image:latest
    restart: always
    command:
      sh -c "poetry run celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - /backdata/static/:/app/static/
      - /backdata/media/:/app/media/
      - /backdata/files/:/app/files/
      - /backdata/media_type/:/app/media_type/
    env_file:
      - ./.env
    depends_on:
      - worker


  redis:
    image: 'redis:7.2'
    expose:
      - 6379
    volumes:
      - redis-data:/data

  pgadmin:
    container_name: db_pg_admin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    env_file:
      - ./.env

  nginx:
    image: nginx:1.19.3
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /certbot/conf:/etc/letsencrypt
      - /certbot/www:/var/www/certbot
      - /backdata/static/:/var/html/static/
      - /backdata/media/:/var/html/media/
      - /backdata/files/:/var/html/files/
      - /backdata/media_type/:/var/html/media_type/
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - /certbot/conf:/etc/letsencrypt
      - /certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  redis-data:
